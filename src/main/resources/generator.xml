<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

	<!-- MyBatis代码生成器 @author Benson -->
	<!-- 需要修改的地方是①②③④，然后执行批处理即可 -->

	<!-- classPathEntry:数据库的JDBC驱动,①location换成你自己的mysql类库位置 -->
	<!-- <classPathEntry location="E:\javalib\jdbc\mysql\mysql-connector-java-5.1.35\mysql-connector-java-5.1.35-bin.jar" 
		/> -->
		
	<!-- 引入配置文件 -->  
   <properties resource="mybatis-generator.properties"/> 
		
	<context id="DB2Tables" targetRuntime="MyBatis3">
		<property name="autoDelimitKeywords" value="true" />
        <property name="beginningDelimiter" value="`" />
        <property name="endingDelimiter" value="`" />
	    <!-- 自动生成UUID的主键 -->
	    <plugin type="com.mie.base.generator.plugins.UUIDGeneratePlugin">
	        <property name="column" value="ID"/>
	        <property name="identity" value="id"/>
	    </plugin>
	
	    <!-- 生成的bean自带serialize接口 -->
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin"></plugin>
		
		<!-- 自动生成批处理的插件 -->
		<plugin type="com.mie.base.generator.plugins.InsertBatchPlugin"></plugin>
		
		<!-- 自动生成api注解的插件 -->
		<plugin type="com.mie.base.generator.plugins.ApiModelPlugin"></plugin>
		
		<!-- 自动给example添加分页功能的插件 -->
		<plugin type="com.mie.base.generator.plugins.PageExamplePlugin"></plugin>
		
		<!-- 自动给Mapper添加分页功能的插件 -->
		<plugin type="com.mie.base.generator.plugins.PageMapperPlugin">
		    <property name="isExtendsIMapper" value="false"/>  
		</plugin>
		
		<!-- 自动生成Service的插件 -->
		<!-- isRedisEnable是否生成 使用redis的注解，默认true -->
		  <plugin type="com.mie.base.generator.plugins.GenerateServicePlugin">
		    <property name="targetPackage" value="${mybatis.services.targetPackage}"/>
		    <property name="targetProject" value="${mybatis.targetProject}"/>
		    <property name="isRedisEnable" value="true"/>  
		</plugin>  
		
		<!-- 自动生成Controller的插件 -->
	     <plugin type="com.mie.base.generator.plugins.GenerateControllerPlugin">
		    <property name="targetPackage" value="${mybatis.controller.targetPackage}"/>
		    <property name="targetProject" value="${mybatis.targetProject}"/>
		</plugin>   

		<!-- 去除自动生成的注释 -->
		<commentGenerator>
			<property name="suppressAllComments" value="true" />
		</commentGenerator>
		
        <!-- 数据库连接，②userId&password改成自己的配置 -->
        
		<jdbcConnection driverClass="${mybatis.jdbcConnection.driverClass}"
			connectionURL="${mybatis.jdbcConnection.connectionURL}"
			userId="${mybatis.jdbcConnection.userId}" password="${mybatis.jdbcConnection.password}">
		</jdbcConnection>
         
		<javaTypeResolver type="com.mie.base.generator.CustomJavaTypeResolver">
			<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL  和 NUMERIC 类型解析为java.math.BigDecimal -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- targetProject:③修改自动生成代码的位置，包括DAO/entity/XML，一般生成在项目下面的src或者test -->
		<!-- 生成vo对象 -->
		<!-- 生成用于查询的Example对象 -->
		<javaModelGenerator targetPackage="${mybatis.javaModelGenerator.targetPackage}"
			targetProject="${mybatis.targetProject}">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
			<!-- targetProject 生成的Java Bean放置在哪个项目的哪个目录下 targetPackage 生成的Java Bean的包名 
				一个有用的属性 <property name="trimStrings" value="true" /> 从数据库返回的值被清理前后的空格 <property 
				name="enableSubPackages" value="false" /> 是否在包名后加上scheme名称 -->
		</javaModelGenerator>

		<!-- 生成用于查询的Mapper.xml -->
		<sqlMapGenerator targetPackage="${mybatis.sqlMapGenerator.targetPackage}"
			targetProject="${mybatis.targetProject}">
			<property name="enableSubPackages" value="true" />
			<!-- targetProject 生成的 SqlMap.xml 文件放置在哪个项目的哪个目录下 targetPackage 生成的 SqlMap.xml 
				文件的包名 <property name="enableSubPackages" value="false" /> 是否在包名后加上scheme名称 -->
		</sqlMapGenerator>

		<!-- 生成DAO的类文件以及配置文件 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="${mybatis.javaClientGenerator.targetPackage}"
			targetProject="${mybatis.targetProject}">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>

		<!-- tableName:④用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名 -->
		<table tableName="${mybatis.table.tableName}" domainObjectName="${mybatis.table.domainObjectName}"
			enableCountByExample="true" enableUpdateByExample="true"
			enableDeleteByExample="true" enableSelectByExample="true"
			selectByExampleQueryId="true" modelType="flat">
			<!-- userActualColumnNames 实体是否与数据库列字段同名 -->
			 <property name="useActualColumnNames" value="true" />
			 <generatedKey column="id" identity="id" sqlStatement="JDBC" />
		</table>
		
	</context>

</generatorConfiguration>